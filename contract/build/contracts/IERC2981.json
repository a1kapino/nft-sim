{
  "contractName": "IERC2981",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be payed in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"project:/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xea04bf4e9fbec9fa17db747a1d27b658b33315ec9faf85fb1ee4fe023f7499a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cdfe31c5316fdfffba8bf112592a20cbb7dd33c13f634cf942312620c5ca53e\",\"dweb:/ipfs/Qmf42UEMDQeyDcqfZ3HCogcPZDcGEXoQKzSfvCtshGNvcH\"]},\"project:/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/IERC2981.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Interface for the NFT Royalty Standard.\r\n *\r\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\r\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\r\n *\r\n * _Available since v4.5._\r\n */\r\ninterface IERC2981 is IERC165 {\r\n    /**\r\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\r\n     * exchange. The royalty amount is denominated and should be payed in that same unit of exchange.\r\n     */\r\n    function royaltyInfo(uint256 tokenId, uint256 salePrice)\r\n        external\r\n        view\r\n        returns (address receiver, uint256 royaltyAmount);\r\n}\r\n",
  "sourcePath": "C:\\Users\\Alexandr\\dev\\nft-sim\\contract\\contracts\\interfaces\\IERC2981.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IERC2981.sol",
    "exportedSymbols": {
      "IERC165": [
        29700
      ],
      "IERC2981": [
        7391
      ]
    },
    "id": 7392,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7374,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "110:23:37"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC165.sol",
        "file": "./IERC165.sol",
        "id": 7375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7392,
        "sourceUnit": 7361,
        "src": "137:23:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7377,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29700,
              "src": "484:7:37"
            },
            "id": 7378,
            "nodeType": "InheritanceSpecifier",
            "src": "484:7:37"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7376,
          "nodeType": "StructuredDocumentation",
          "src": "164:296:37",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
        },
        "fullyImplemented": false,
        "id": 7391,
        "linearizedBaseContracts": [
          7391,
          29700
        ],
        "name": "IERC2981",
        "nameLocation": "472:8:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7379,
              "nodeType": "StructuredDocumentation",
              "src": "499:235:37",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be payed in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "id": 7390,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "749:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7381,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "769:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "761:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7383,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "786:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "778:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:36:37"
            },
            "returnParameters": {
              "id": 7389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7386,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "855:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "847:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7388,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "873:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "865:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:41:37"
            },
            "scope": 7391,
            "src": "740:148:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7392,
        "src": "462:429:37",
        "usedErrors": []
      }
    ],
    "src": "110:783:37"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interfaces/IERC2981.sol",
    "exportedSymbols": {
      "IERC165": [
        29700
      ],
      "IERC2981": [
        7391
      ]
    },
    "id": 7392,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7374,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "110:23:37"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC165.sol",
        "file": "./IERC165.sol",
        "id": 7375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7392,
        "sourceUnit": 7361,
        "src": "137:23:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7377,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29700,
              "src": "484:7:37"
            },
            "id": 7378,
            "nodeType": "InheritanceSpecifier",
            "src": "484:7:37"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7376,
          "nodeType": "StructuredDocumentation",
          "src": "164:296:37",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
        },
        "fullyImplemented": false,
        "id": 7391,
        "linearizedBaseContracts": [
          7391,
          29700
        ],
        "name": "IERC2981",
        "nameLocation": "472:8:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7379,
              "nodeType": "StructuredDocumentation",
              "src": "499:235:37",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be payed in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "id": 7390,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "749:11:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7381,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "769:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "761:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7383,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "786:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "778:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:36:37"
            },
            "returnParameters": {
              "id": 7389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7386,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "855:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "847:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7388,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "873:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 7390,
                  "src": "865:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:41:37"
            },
            "scope": 7391,
            "src": "740:148:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7392,
        "src": "462:429:37",
        "usedErrors": []
      }
    ],
    "src": "110:783:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-17T11:42:19.368Z",
  "devdoc": {
    "details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
    "kind": "dev",
    "methods": {
      "royaltyInfo(uint256,uint256)": {
        "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be payed in that same unit of exchange."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}